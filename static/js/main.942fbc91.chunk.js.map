{"version":3,"sources":["components/Header/index.js","utils/getColours.js","components/Block/index.js","components/Board/index.js","Hooks/useEvent.js","Hooks/useLocalStorage.js","utils/getNewPosition.js","utils/isExist.js","components/ActionPanel/index.js","components/Popup/index.js","App.js","serviceWorker.js","index.js"],"names":["Header","score","best","onClickNewGame","className","onClick","getColour","num","Block","style","background","color","Board","data","map","row","rowIndex","key","index","useEvent","event","handler","passive","useEffect","window","addEventListener","removeEventListener","useLocalStorage","initialValue","useState","item","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","getNewPosition","Math","floor","random","isExist","array","term","found","i","length","some","nop","ActionPanel","onClickUndo","disableUndo","onClickReplay","disableReplay","onClickRedo","disableRedo","opacity","fontSize","Popup","message","buttons","btn","label","App","INITIAL_DATA","setData","newGame","setNewGame","setScore","setBest","scoreHistory","setScoreHistory","isWon","setIsWon","moveHistory","setMoveHistory","undoMoves","setUndoMoves","replayStatus","setReplayStatus","visible","popupStatus","setPopupStatus","addItem","newGrid","rand1","rand2","swipeLeft","isMove","oldGrid","newArray","cloneDeep","b","slow","fast","checkGameOver","swipeRight","swipeDown","oldData","swipeUp","initialize","max","keyCode","history","lastMove","pop","push","setTimeout","uMoves","nextMove","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.942fbc91.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.scss';\n\nexport default function Header({ score, best, onClickNewGame }) {\n  return (\n    <div className='header'>\n      <div className='header__group'>\n        <h1 className='header__title'>2048</h1>\n        <div className='header__score-container'>\n          <div className='header__score-box'>\n            <span className='header__score-box--title'>SCORE</span>\n            <span>{score}</span>\n          </div>\n          <div className='header__score-box'>\n            <span className='header__score-box--title'>BEST</span>\n            <span>{best}</span>\n          </div>\n          <button className='header__button' onClick={onClickNewGame}>\n            New Game\n          </button>\n        </div>\n      </div>\n      <div className='header__group'>\n        <p>Join the number and get to the 2048 tile!</p>\n      </div>\n    </div>\n  );\n}\n","const getColour = (num) => {\n    switch(num) {\n        case 2: return '#EBDCD0';\n        case 4: return '#E9DBBA';\n        case 8: return '#E9A067';\n        case 16: return '#F08151';\n        case 32: return '#F2654F';\n        case 64: return '#F1462C';\n        case 128: return '#E7C65E';\n        case 256: return '#E8C350';\n        case 512: return '#E8BE40';\n        case 1024: return '#E8BB31';\n        case 2048: return '#E7B723';\n        default: return '#C2B3A3';\n    }\n}\n\nexport default getColour;\n","import React from 'react';\nimport getColour from '../../utils/getColours';\nimport './Block.scss';\n\nexport default function Block({ num }) {\n  return (\n    <div\n      className='block'\n      style={{ background: getColour(num), color: num !== 0 && '#645B52' }}\n    >\n      {num ? num : ''}\n    </div>\n  );\n}\n","import React from 'react';\nimport Header from '../Header';\nimport Block from '../Block';\nimport './Board.scss';\n\nexport default function Board({ data, score, best, onClickNewGame }) {\n  return (\n    <div className='board'>\n      <Header score={score} best={best} onClickNewGame={onClickNewGame} />\n      <div className='board__body'>\n        {data.map((row, rowIndex) => {\n          return (\n            <div key={rowIndex} className='board__row'>\n              {row.map((num, index) => (\n                <Block num={num} key={index} />\n              ))}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n","import { useEffect } from 'react';\n\nconst useEvent = (event, handler, passive = false) => {\n  useEffect(() => {\n    window.addEventListener(event, handler, passive);\n\n    return () => {\n      window.removeEventListener(event, handler, passive);\n    };\n  });\n};\n\nexport default useEvent;\n","import { useState } from 'react';\n\nconst useLocalStorage = (key, initialValue) => {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  const setValue = (value) => {\n    try {\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return [storedValue, setValue];\n};\n\nexport default useLocalStorage;\n","const getNewPosition = () => {\n  const rowPosition = Math.floor(Math.random() * 4);\n  const colPosition = Math.floor(Math.random() * 4);\n  return [rowPosition, colPosition];\n};\n\nexport default getNewPosition;\n","const isExist = (array, term=0) => {\n  let found = false;\n\n  for (let i = 0; i < array.length; i++) {\n    found = array[i].some((i) => i === term);\n    if (found) break;\n  }\n  return found;\n};\n\nexport default isExist;","import React from 'react';\nimport { IoIosUndo, IoIosRedo, IoIosPlay } from 'react-icons/io';\nimport './ActionPanel.scss';\n\nconst nop = () => {};\n\nexport default function ActionPanel({\n  onClickUndo,\n  disableUndo,\n  onClickReplay,\n  disableReplay,\n  onClickRedo,\n  disableRedo,\n}) {\n  return (\n    <div className='action-panel'>\n      <div\n        className='action-panel__group'\n        style={{ opacity: disableUndo ? 0.3 : 1 }}\n      >\n        <IoIosUndo\n          className={\n            !disableUndo\n              ? 'action-panel__button'\n              : 'action-panel__button--disabled'\n          }\n          color='white'\n          fontSize='100px'\n          onClick={!disableUndo ? onClickUndo : nop}\n        />\n        Undo\n      </div>\n      <div\n        className='action-panel__group'\n        style={{ opacity: disableReplay ? 0.3 : 1 }}\n      >\n        <IoIosPlay\n          className={\n            !disableReplay\n              ? 'action-panel__button'\n              : 'action-panel__button--disabled'\n          }\n          color='white'\n          fontSize='100px'\n          onClick={!disableReplay ? onClickReplay : nop}\n        />\n        Replay\n      </div>\n      <div\n        className='action-panel__group'\n        style={{ opacity: disableRedo ? 0.3 : 1 }}\n      >\n        <IoIosRedo\n          className={\n            !disableRedo\n              ? 'action-panel__button'\n              : 'action-panel__button--disabled'\n          }\n          color='white'\n          fontSize='100px'\n          onClick={!disableRedo ? onClickRedo : nop}\n        />\n        Redo\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport './Popup.scss';\n\nexport default function Popup({ message, buttons }) {\n  return (\n    <div className='popup'>\n      <div className='popup__message'>{message}</div>\n      <div className='popup__footer'>\n        {buttons.map((btn) => (\n          <button className='popup__button' onClick={btn.onClick}>\n            {btn.label}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport Board from './components/Board';\nimport './App.scss';\nimport cloneDeep from 'lodash.clonedeep';\nimport useEvent from './Hooks/useEvent';\nimport useLocalStorage from './Hooks/useLocalStorage';\nimport getNewPosition from './utils/getNewPosition';\nimport isExist from './utils/isExist';\nimport ActionPanel from './components/ActionPanel';\nimport Popup from './components/Popup';\n\nfunction App() {\n  const UP = 38;\n  const DOWN = 40;\n  const LEFT = 37;\n  const RIGHT = 39;\n  // const STOP = 27;\n\n  const INITIAL_DATA = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n  const [data, setData] = useLocalStorage('data', INITIAL_DATA);\n  const [newGame, setNewGame] = useLocalStorage('newGame', true);\n  const [score, setScore] = useLocalStorage('score', 0);\n  const [best, setBest] = useLocalStorage('best', 0);\n  const [scoreHistory, setScoreHistory] = useLocalStorage('scoreHistory', []);\n  const [isWon, setIsWon] = useLocalStorage('isWon', false);\n  const [moveHistory, setMoveHistory] = useLocalStorage('moveHistory', []);\n  const [undoMoves, setUndoMoves] = useLocalStorage('undoMoves', []);\n  const [replayStatus, setReplayStatus] = useLocalStorage(\n    'replayStatus',\n    false\n  );\n  const [popupStatus, setPopupStatus] = useState({\n    visible: false,\n    message: '',\n  });\n  // Inititalize\n  const initialize = () => {\n    let newGrid = cloneDeep(data);\n\n    addItem(newGrid);\n\n    addItem(newGrid);\n\n    setData(newGrid);\n    setNewGame(false);\n  };\n\n  // Add item\n  const addItem = (newGrid) => {\n    let [rand1, rand2] = getNewPosition(newGrid);\n\n    while (newGrid[rand1][rand2] !== 0) {\n      [rand1, rand2] = getNewPosition(newGrid);\n    }\n\n    newGrid[rand1][rand2] = Math.random() > 0.5 ? 2 : 4;\n  };\n\n  // Swipe action\n\n  const swipeLeft = (isMove = true) => {\n    let oldGrid = data;\n    let newArray = cloneDeep(data);\n\n    if (isWon) {\n      setPopupStatus({ visible: true, message: 'congratulations' });\n      return;\n    }\n\n    if (replayStatus) {\n      return;\n    }\n\n    if (undoMoves.length) {\n      setUndoMoves([]);\n    }\n\n    for (let i = 0; i < 4; i++) {\n      let b = newArray[i];\n      let slow = 0;\n      let fast = 1;\n\n      while (slow < 4) {\n        if (fast === 4) {\n          fast = slow + 1;\n          slow++;\n          continue;\n        }\n        if (b[slow] === 0 && b[fast] === 0) {\n          fast++;\n        } else if (b[slow] === 0 && b[fast] !== 0) {\n          b[slow] = b[fast];\n          b[fast] = 0;\n          fast++;\n        } else if (b[slow] !== 0 && b[fast] === 0) {\n          fast++;\n        } else if (b[slow] !== 0 && b[fast] !== 0) {\n          if (b[slow] === b[fast]) {\n            b[slow] = b[slow] + b[fast];\n            setScore(score + b[slow]);\n            b[fast] = 0;\n            fast = slow + 1;\n            slow++;\n          } else {\n            slow++;\n            fast = slow + 1;\n          }\n        }\n      }\n    }\n\n    if (JSON.stringify(oldGrid) !== JSON.stringify(newArray)) {\n      setMoveHistory([...moveHistory, oldGrid]);\n      if (isExist(newArray, 2048)) {\n        setIsWon(true);\n        setData(newArray);\n        setPopupStatus({ visible: true, message: 'congratulations' });\n      } else addItem(newArray);\n    } else if (!isExist(oldGrid) && isMove && checkGameOver()) {\n      setPopupStatus({ visible: true, message: 'Game Over' });\n    }\n\n    if (isMove) {\n      setData(newArray);\n    } else return newArray;\n  };\n\n  const swipeRight = (isMove = true) => {\n    let oldGrid = data;\n    let newArray = cloneDeep(data);\n\n    if (isWon) {\n      setPopupStatus({ visible: true, message: 'congratulations' });\n      return;\n    }\n\n    if (replayStatus) {\n      return;\n    }\n\n    if (undoMoves.length) {\n      setUndoMoves([]);\n    }\n\n    for (let i = 3; i >= 0; i--) {\n      let b = newArray[i];\n      let slow = b.length - 1;\n      let fast = slow - 1;\n\n      while (slow > 0) {\n        if (fast === -1) {\n          fast = slow - 1;\n          slow--;\n          continue;\n        }\n        if (b[slow] === 0 && b[fast] === 0) {\n          fast--;\n        } else if (b[slow] === 0 && b[fast] !== 0) {\n          b[slow] = b[fast];\n          b[fast] = 0;\n          fast--;\n        } else if (b[slow] !== 0 && b[fast] === 0) {\n          fast--;\n        } else if (b[slow] !== 0 && b[fast] !== 0) {\n          if (b[slow] === b[fast]) {\n            b[slow] = b[slow] + b[fast];\n            setScore(score + b[slow]);\n            b[fast] = 0;\n            fast = slow - 1;\n            slow--;\n          } else {\n            slow--;\n            fast = slow - 1;\n          }\n        }\n      }\n    }\n\n    if (JSON.stringify(oldGrid) !== JSON.stringify(newArray)) {\n      setMoveHistory([...moveHistory, oldGrid]);\n      if (isExist(newArray, 2048)) {\n        setIsWon(true);\n        setData(newArray);\n        setPopupStatus({ visible: true, message: 'Congratulations' });\n        return;\n      } else addItem(newArray);\n    } else if (!isExist(oldGrid) && isMove && checkGameOver()) {\n      setPopupStatus({ visible: true, message: 'Game Over' });\n    }\n\n    if (isMove) {\n      setData(newArray);\n    } else return newArray;\n  };\n\n  const swipeDown = (isMove = true) => {\n    let b = [...data];\n    let oldData = JSON.parse(JSON.stringify(data));\n\n    if (isWon) {\n      setPopupStatus({ visible: true, message: 'congratulations' });\n      return;\n    }\n\n    if (replayStatus) {\n      return;\n    }\n\n    if (undoMoves.length) {\n      setUndoMoves([]);\n    }\n\n    for (let i = 3; i >= 0; i--) {\n      let slow = b.length - 1;\n      let fast = slow - 1;\n\n      while (slow > 0) {\n        if (fast === -1) {\n          fast = slow - 1;\n          slow--;\n          continue;\n        }\n\n        if (b[slow][i] === 0 && b[fast][i] === 0) {\n          fast--;\n        } else if (b[slow][i] === 0 && b[fast][i] !== 0) {\n          b[slow][i] = b[fast][i];\n          b[fast][i] = 0;\n          fast--;\n        } else if (b[slow][i] !== 0 && b[fast][i] === 0) {\n          fast--;\n        } else if (b[slow][i] !== 0 && b[fast][i] !== 0) {\n          if (b[slow][i] === b[fast][i]) {\n            b[slow][i] = b[slow][i] + b[fast][i];\n            setScore(score + b[slow][i]);\n            b[fast][i] = 0;\n            fast = slow - 1;\n            slow--;\n          } else {\n            slow--;\n            fast = slow - 1;\n          }\n        }\n      }\n    }\n\n    if (JSON.stringify(oldData) !== JSON.stringify(b)) {\n      setMoveHistory([...moveHistory, oldData]);\n      if (isExist(b, 2048)) {\n        setIsWon(true);\n        setData(b);\n        setPopupStatus({ visible: true, message: 'congratulations' });\n      } else addItem(b);\n    } else if (!isExist(oldData) && isMove && checkGameOver()) {\n      setPopupStatus({ visible: true, message: 'Game Over' });\n    }\n\n    if (isMove) {\n      setData(b);\n    } else return b;\n  };\n\n  const swipeUp = (isMove = true) => {\n    let b = [...data];\n    let oldData = JSON.parse(JSON.stringify(data));\n\n    if (isWon) {\n      setPopupStatus({ visible: true, message: 'congratulations' });\n      return;\n    }\n\n    if (replayStatus) {\n      return;\n    }\n\n    if (undoMoves.length) {\n      setUndoMoves([]);\n    }\n\n    for (let i = 0; i < 4; i++) {\n      let slow = 0;\n      let fast = 1;\n\n      while (slow < 4) {\n        if (fast === 4) {\n          fast = slow + 1;\n          slow++;\n          continue;\n        }\n        if (b[slow][i] === 0 && b[fast][i] === 0) {\n          fast++;\n        } else if (b[slow][i] === 0 && b[fast][i] !== 0) {\n          b[slow][i] = b[fast][i];\n          b[fast][i] = 0;\n          fast++;\n        } else if (b[slow][i] !== 0 && b[fast][i] === 0) {\n          fast++;\n        } else if (b[slow][i] !== 0 && b[fast][i] !== 0) {\n          if (b[slow][i] === b[fast][i]) {\n            b[slow][i] = b[slow][i] + b[fast][i];\n            setScore(score + b[slow][i]);\n            b[fast][i] = 0;\n            fast = slow + 1;\n            slow++;\n          } else {\n            slow++;\n            fast = slow + 1;\n          }\n        }\n      }\n    }\n\n    if (JSON.stringify(oldData) !== JSON.stringify(b)) {\n      setMoveHistory([...moveHistory, oldData]);\n      if (isExist(b, 2048)) {\n        setIsWon(true);\n        setData(b);\n        setPopupStatus({ visible: true, message: 'congratulations' });\n      } else addItem(b);\n    } else if (!isExist(oldData) && isMove && checkGameOver()) {\n      setPopupStatus({ visible: true, message: 'Game Over' });\n    }\n\n    if (isMove) {\n      setData(b);\n    } else return b;\n  };\n\n  const checkGameOver = () => {\n    if (JSON.stringify(data) !== JSON.stringify(swipeLeft(false))) {\n      return false;\n    } else if (JSON.stringify(data) !== JSON.stringify(swipeRight(false))) {\n      return false;\n    } else if (JSON.stringify(data) !== JSON.stringify(swipeUp(false))) {\n      return false;\n    } else if (JSON.stringify(data) !== JSON.stringify(swipeDown(false))) {\n      return false;\n    } else return true;\n  };\n\n  // Reset, New Game\n  const onClickNewGame = () => {\n    setScoreHistory([...scoreHistory, score]);\n    setMoveHistory([]);\n    setUndoMoves([]);\n    setIsWon(false);\n    setNewGame(true);\n    setScore(0);\n    setData(INITIAL_DATA);\n  };\n\n  // Undo\n  const onClickUndo = () => {\n    const history = cloneDeep(moveHistory);\n    const lastMove = history.pop();\n    setMoveHistory(history);\n    setUndoMoves([...undoMoves, data]);\n    setData(lastMove);\n  };\n\n  // Replay\n  const onClickReplay = () => {\n    setReplayStatus(true);\n    const history = cloneDeep(moveHistory);\n    history.push(data);\n    for (let i = 0; i < history.length; i++) {\n      setTimeout(() => {\n        console.log('replay in progress', i);\n        setData(history[i]);\n        if (i === history.length - 1) {\n          setReplayStatus(false);\n        }\n      }, i * 1000);\n    }\n  };\n\n  // Redo\n  const onClickRedo = () => {\n    const history = cloneDeep(moveHistory);\n    const uMoves = cloneDeep(undoMoves);\n    const nextMove = uMoves.pop();\n    history.push(data);\n    setMoveHistory(history);\n    setUndoMoves(uMoves);\n    setData(nextMove);\n  };\n\n  // popup ok\n  const onClickOk = () => {\n    setPopupStatus({ ...popupStatus, visible: false });\n  };\n\n  // popup try\n  const onClickTry = () => {\n    setPopupStatus({ ...popupStatus, visible: false });\n    onClickNewGame();\n  };\n\n  const handleKeyDown = (event) => {\n    switch (event.keyCode) {\n      case UP:\n        swipeUp();\n        break;\n      case DOWN:\n        swipeDown();\n        break;\n      case LEFT:\n        swipeLeft();\n        break;\n      case RIGHT:\n        swipeRight();\n        break;\n      default:\n        break;\n    }\n  };\n\n  useEffect(() => {\n    if (newGame) {\n      initialize();\n    }\n  }, [newGame]);\n\n  useEffect(() => {\n    setBest(Math.max(...scoreHistory, score));\n  }, [score]);\n\n  useEvent('keydown', handleKeyDown);\n\n  return (\n    <div className='container'>\n      <Board\n        data={data}\n        score={score}\n        best={best}\n        onClickNewGame={onClickNewGame}\n      />\n      <div className='container__action'>\n        <ActionPanel\n          onClickUndo={onClickUndo}\n          disableUndo={!moveHistory.length || replayStatus || isWon}\n          onClickReplay={onClickReplay}\n          disableReplay={replayStatus || !moveHistory.length}\n          onClickRedo={onClickRedo}\n          disableRedo={!undoMoves.length || replayStatus}\n        />\n      </div>\n      {popupStatus.visible && (\n        <Popup\n          message={popupStatus.message}\n          buttons={[\n            {\n              label: 'ok',\n              onClick: onClickOk,\n            },\n            {\n              label: isWon ? 'new game' : 'try again',\n              onClick: onClickTry,\n            },\n          ]}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}